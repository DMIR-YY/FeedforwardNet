name: "LeNet_2conv2max_relu"
layer {
  name: "input"
  type: "Data"
  top: "input"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    #source: "/home/dmir/work/caffe/examples/mnist/mnist_train_lmdb"
    source: "/home/dmir/work/caffe/examples/mnist/mnist_kaggle_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "input"
  type: "Data"
  top: "input"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    #source: "/home/dmir/work/caffe/examples/mnist/mnist_test_lmdb"
    source: "/home/dmir/work/caffe/examples/mnist/mnist_kaggle_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}


layer {
  name: "c1"
  type: "Convolution"
  bottom: "input"
  top: "c1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 6
    kernel_size: 5
    stride: 1
    pad: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu_c1"
  bottom: "c1"
  top: "relu_c1"
  type: "ReLU"
}

# pool1
layer {
  name: "s2"
  type: "Pooling"
  bottom: "relu_c1"
  top: "s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "relu_s2"
  bottom: "s2"
  top: "relu_s2"
  type: "ReLU"
}
layer {
  name: "c3"
  type: "Convolution"
  bottom: "relu_s2"
  top: "c3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu_c3"
  bottom: "c3"
  top: "relu_c3"
  type: "ReLU"
}
layer {
  name: "s4"
  type: "Pooling"
  bottom: "relu_c3"
  top: "s4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "relu_s4"
  bottom: "s4"
  top: "relu_s4"
  type: "ReLU"
}


layer {
  name: "f5"
  type: "InnerProduct"
  bottom: "relu_s4"
  top: "f5"
  param {
    lr_mult:1
  }
  param {
    lr_mult:2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu_f5"
  bottom: "f5"
  top: "relu_f5"
  type: "ReLU"
}


#accuracy
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "relu_f5"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

#loss
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "relu_f5"
  bottom: "label"
  top: "loss"
}
